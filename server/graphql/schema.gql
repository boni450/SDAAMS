type User {
  id: ID!
  firstName: String
  lastName: String
  email: String
  image: String
  role: String
  createdAt: String
  updatedAt: String
  appointments: [Appointment!]
}

type Appointment {
  id: ID!
  name: String
  description: String
  color: String
  endDate: String
  startDate: String
  ownerId: Int
  approverId: Int
  createdAt: String
  updatedAt: String
  owner: User!
  approver: User!
}

type Analytics {
  users: Int
  appointments: Int
  comments: Int
  bookings: Int
}

type Query {
  user(id: ID!): User
  users(offset: Int, limit: Int, orderBy: String, orderByCol: String): [User]
  login(email: String, password: String): String

  appointment(id: ID!): Appointment
  appointments(
    offset: Int
    limit: Int
    ownerId: Int
    orderBy: String
    orderByCol: String
  ): [Appointment]

  analytics: Analytics
}

type Mutation {
  register(
    firstName: String!
    lastName: String!
    email: String!
    password: String!
  ): String

  deleteUser(id: Int!): String

  addAppointment(
    name: String!
    description: String
    startDate: String!
    endDate: String!
    color: String
    ownerId: Int!
    approverId: Int
  ): Appointment

  updateAppointment(
    id: Int!
    name: String
    description: String
    startDate: String
    endDate: String
    color: String
    ownerId: Int
    approverId: Int
  ): Appointment

  deleteAppointment(id: Int!): String
}
